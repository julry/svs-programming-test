{"version":3,"sources":["components/common/Text.jsx","static/gifs/lineGif.gif","static/gifs/intro.gif","static/gifs/firstQuestion.gif","static/gifs/secondQuestion.gif","static/gifs/thirdQuestion.gif","static/gifs/forthQuestion.gif","static/gifs/fifthQuestion.gif","static/gifs/sixthQuestion.gif","static/gifs/seventhQuestion.gif","static/gifs/csharp.gif","static/gifs/CPlus.gif","static/gifs/Java.gif","static/gifs/python.gif","static/images/CSharpVK.png","static/images/CPlusVK.png","static/images/JavaVK.png","static/images/PythonVK.png","answerTypes.config.js","questions.config.js","contexts/ProgressContext.js","components/common/ImageWrapper.jsx","components/svg/LeftArrow.jsx","components/common/Button.jsx","components/common/TopLine.jsx","components/common/FlexWrapper.js","components/QuestionWrapper.js","utils/getQuestionById.js","components/common/ShareText.jsx","constants/hashtag.js","components/screens/Intro.jsx","components/svg/Logo.jsx","hocs/useResult.js","utils/getAnswerById.js","components/screens/Final.jsx","components/svg/VKIcon.jsx","screens.config.js","components/screens/questions/Question1.js","components/screens/questions/Question2.js","components/screens/questions/Question3.js","components/screens/questions/Question4.js","components/screens/questions/Question5.js","components/screens/questions/Question6.js","components/screens/questions/Question7.js","utils/getShareParams.js","components/common/AppBar.jsx","components/svg/DownMark.jsx","components/ScreenWrapper.jsx","utils/preloadImage.js","App.js","index.js"],"names":["Text","styled","p","Title","BlueText","span","RedText","SmallText","AnswerType","Python","Java","CPlus","CSharp","answerTypes","type","title","addTitle","description","image","CPlusGif","shareImage","CPlusVK","CSharpGif","CSharpVK","JavaGif","JavaVK","PythonGif","PythonVK","questions","id","text","firstQGif","answers","secondQGif","thirdGif","forthGif","fifthGif","sixthGif","seventhGif","ProgressContext","React","createContext","ProgressProvider","Provider","Consumer","Wrapper","div","ImageWrapperStyled","Image","img","ButtonWrapper","ImageWrapper","props","children","restProps","src","alt","LeftArrow","viewBox","fill","xmlns","clipPath","d","width","height","transform","BtnStyled","button","LeftArrowStyled","Button","isShort","ImgStyled","lineGif","TopLine","FlexWrapper","ContentWrapper","AnswersBoxStyled","AnswerWrapper","isSelected","NumberWrapper","ButtonStyled","QuestionWrapper","question","useContext","setAnswer","setPrev","setNext","questionAnswers","handleAnswerChange","useCallback","answerId","setTimeout","map","answer","onClick","renderAnswerWrapper","length","getQuestionById","find","ShareTextStyled","ShareText","lastProps","SEVERSTAL_TAG","LogoWrapper","LogoStyled","TextWrapper","TitleStyled","TextStyled","AddInfoWrapper","LanguageWrapper","ArrowIcon","DEFAULT_RESULT","useResult","resultPoints","Object","keys","reduce","res","questionId","getAnswerById","maxPoints","Math","max","key","resultType","TypeWrapper","ResultTitleWrapper","ResultImageWrapper","AddTitleWrapper","DescriptionWrapper","ShareBtn","VKIconStyled","ShareWrapper","ScreenType","screens","name","component","introGif","values","preloadImages","result","window","open","url","location","protocol","host","pathname","join","shareText","resolve","queryParams","URLSearchParams","append","toString","getShareParams","FlexContainer","Tab","ActiveTab","ButtonsBlock","color","DropDown","DropIcon","stroke","strokeWidth","AppBar","ScreenWrapperStyled","DEFAULT_ANSWERS","ScreenWrapper","screenParam","search","get","useState","setHeight","useEffect","handleResize","viewportHeight","document","documentElement","clientHeight","addEventListener","removeEventListener","currentScreenIndex","setCurrentScreenIndex","screenDelta","setScreenDelta","setAnswers","screen","Component","clears","createElement","style","position","top","left","body","appendChild","removeChild","preloadImage","forEach","clear","progressProviderValue","value","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45904654.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n    font-size: 14px;\n    line-height: 105.7%;\n    font-weight: 500;\n    \n    @media screen and (max-width: 330px){\n        font-size: 12px;\n    }\n    \n    @media screen  and (min-width: 640px){\n        font-size: 16px;\n    }\n    \n    @media screen  and (max-height: 600px){\n        font-size: 12px;\n    }\n    \n    @media screen and (min-width: 1100px){\n        font-size: 22px;\n    }\n`;\n\nexport const Title = styled(Text)`\n    font-size: 18px;\n    \n    @media screen and (max-width: 330px){\n        font-size: 16px;\n    }\n    \n    @media screen  and (min-width: 640px){\n        font-size: 28px;\n    }\n    \n     @media screen  and (max-height: 600px){\n        font-size: 16px;\n    }\n    \n    @media screen and (min-width: 1100px){\n        font-size: 30px;\n    }\n`;\n\nexport const BlueText = styled.span`\n    color: #006AF4;\n`;\n\nexport const RedText = styled.span`\n    color: #FF0000;\n`;\n\n\nexport const SmallText = styled(Text)`\n    font-size: 12px;\n    @media screen and (max-width: 330px){\n        font-size: 10px;\n    }\n    \n    @media screen and (min-width: 640px){\n        font-size: 16px;\n    }\n    \n    @media screen and (min-width: 1100px){\n        font-size: 20px;\n    }\n`;","export default __webpack_public_path__ + \"static/media/lineGif.fa2d14d2.gif\";","export default __webpack_public_path__ + \"static/media/intro.2143d086.gif\";","export default __webpack_public_path__ + \"static/media/firstQuestion.fc4c1376.gif\";","export default __webpack_public_path__ + \"static/media/secondQuestion.e10f4dec.gif\";","export default __webpack_public_path__ + \"static/media/thirdQuestion.d6635d70.gif\";","export default __webpack_public_path__ + \"static/media/forthQuestion.e3f03c70.gif\";","export default __webpack_public_path__ + \"static/media/fifthQuestion.4400d4a7.gif\";","export default __webpack_public_path__ + \"static/media/sixthQuestion.78254805.gif\";","export default __webpack_public_path__ + \"static/media/seventhQuestion.27ad28bf.gif\";","export default __webpack_public_path__ + \"static/media/csharp.4f3b20b2.gif\";","export default __webpack_public_path__ + \"static/media/CPlus.e232bfc3.gif\";","export default __webpack_public_path__ + \"static/media/Java.30422b20.gif\";","export default __webpack_public_path__ + \"static/media/python.db29c052.gif\";","export default __webpack_public_path__ + \"static/media/CSharpVK.446a5188.png\";","export default __webpack_public_path__ + \"static/media/CPlusVK.c609ecc2.png\";","export default __webpack_public_path__ + \"static/media/JavaVK.4ba67cd4.png\";","export default __webpack_public_path__ + \"static/media/PythonVK.e7b4cc1f.png\";","import React from 'react';\nimport { BlueText, RedText, Text } from './components/common/Text';\nimport {\n    CPlusGif, CPlusVK,\n    CSharpGif, CSharpVK,\n    JavaGif, JavaVK,\n    PythonGif,\n    PythonVK,\n} from './constants/images';\n\nexport const AnswerType = {\n    Python: 'Python',\n    Java: 'Java',\n    CPlus: 'C++',\n    CSharp: 'C#',\n};\n\nexport const answerTypes = {\n    [AnswerType.CPlus]: {\n        type: AnswerType.CPlus,\n        title: 'Остроумный и компанейский – наладите контакт даже с пришельцами',\n        addTitle: 'Вы пользуетесь популярностью среди\\nдрузей, но у вас непростой характер.',\n        description: () => <Text>\n            <BlueText>Ходят легенды,</BlueText> что у вас 27 часов\n            в сутках. Как иначе объяснить вашу <RedText>{'<'}</RedText>продуктивность<RedText>{'>'}</RedText> и ответственный {'{\\n'}\n            <BlueText>подход к проектам и задачам?</BlueText>\n            {'\\n}\\n\\n'}\n            Вы не беретесь за всё сразу,{'\\n'}\n            а выбираете <RedText>конкретную цель</RedText>{'\\n'}\n            и работаете на ее достижение.\n        </Text>,\n        image: CPlusGif,\n        shareImage: CPlusVK,\n    },\n    [AnswerType.CSharp]: {\n        type: AnswerType.CSharp,\n        title: 'Любитель творчества и развития!\\nВам даже море по колено :)',\n        addTitle: 'Вы виртуоз плохо закодированного мира, ваши подходы нестандартны, а возможности безграничны.',\n        description: () => <Text>\n            Вы не ищете легких путей и подходите к решению задач с {'{\\n'}\n            <BlueText>ответственностью и креативом</BlueText>.{'\\n}\\n'}\n            Обыденность и стагнация — это не про вас, вы всегда за <BlueText>{'<'}</BlueText>\n            развитие<BlueText>{'>'}</BlueText> и поиск <RedText>новых возможностей</RedText>.\n        </Text>,\n        image: CSharpGif,\n        shareImage: CSharpVK,\n    },\n    [AnswerType.Java]: {\n        type: AnswerType.Java,\n        title: 'Организованный во всем:\\nот внешнего вида до гугл-календаря',\n        addTitle: 'Вашей ответственности\\nпозавидует каждый!',\n        description: () => <Text>\n            Вы обстоятельный человек, который{'\\n'}точно <RedText>доведет дело до конца</RedText> и будет работать, пока не придет к <BlueText>{'<'}</BlueText>идеальному<BlueText>{'>'}</BlueText> результату.{'\\n\\n'}\n            Скорость работы вам не важна,{'\\n'}куда больше вы цените <BlueText>качество</BlueText>.\n        </Text>,\n        image: JavaGif,\n        shareImage: JavaVK,\n    },\n    [AnswerType.Python]: {\n        type: AnswerType.Python,\n        title: 'Универсальный солдат, который\\nперевернет мир программирования',\n        addTitle: 'Вы настолько многосторонняя личность, что даже люди, знающие вас много лет, не устают удивляться вашим достижениям.',\n        description: () => <Text>\n            Вы умеете брать на себя <RedText>много{'\\n'}задач</RedText> и легко справляетесь {'\\n'}с <BlueText>{'<'}</BlueText>\n            любыми проектами<BlueText>{'>'}</BlueText>.{'\\n\\n'}Вы легкий на подъем и общительный человек, <BlueText>желающий помочь всем</BlueText>.\n        </Text>,\n        image: PythonGif,\n        shareImage: PythonVK\n    },\n};","import React from 'react';\nimport { AnswerType } from './answerTypes.config';\nimport { fifthGif, firstQGif, forthGif, secondQGif, seventhGif, sixthGif, thirdGif } from './constants/images';\nimport { BlueText, RedText, Title } from './components/common/Text';\n\nexport const questions = [\n    {\n        id: '1',\n        text: () => <Title>\n            Ты приходишь <BlueText>{'<'}</BlueText>\n            на стажировку<BlueText>{'>'}</BlueText> в новую компанию.\n            {'\\n\\n'}Твой первый <RedText>день</RedText> – {'{\\n'}<BlueText>чем займешься сегодня?</BlueText>{'\\n}'}\n        </Title>,\n        image: firstQGif,\n        answers: [\n            {\n                id: '1',\n                text: 'Найду тимлида и попрошу добавить меня во всевозможные чатики',\n                type: AnswerType.CPlus,\n            },\n            {\n                id: '2',\n                text: 'Постараюсь запомнить, кто есть кто',\n                type: AnswerType.Python,\n            },\n            {\n                id: '3',\n                text: 'Где тут код писать? Я на работе уже 30 секунд',\n                type: AnswerType.CSharp,\n            },\n            {\n                id: '4',\n                text: 'Заведу отдельный файл, куда буду записывать все услышанные баги, пригодится',\n                type: AnswerType.Java,\n            },\n        ],\n    },\n    {\n        id: '2',\n        text: () => <Title>\n            Твой новый {'<'}<RedText>рабочий стол</RedText>{'>'} {'\\n\\nкаким он будет {\\n'}\n            <BlueText>через месяц работы?</BlueText>{'\\n}'}\n        </Title>,\n        image: secondQGif,\n        answers: [\n            {\n                id: '1',\n                text: 'Хаос. С трудом нахожу мышку',\n                type: AnswerType.CSharp,\n            },\n            {\n                id: '2',\n                text: 'Стерильный порядок. Я даже кофе на него не ставлю – мало ли что случится с компьютером',\n                type: AnswerType.Python,\n            },\n            {\n                id: '3',\n                text: 'Хорошие отношения с компилятором важнее уборки',\n                type: AnswerType.CPlus,\n            },\n            {\n                id: '4',\n                text: 'Я доверяю уборку на столе ИИ',\n                type: AnswerType.Java,\n            },\n        ],\n    },\n    {\n        id: '3',\n        text: () => <Title><BlueText>Что</BlueText> смотришь на{'{\\n'}\n            <RedText>YouTube?</RedText>{'\\n}'}\n        </Title>,\n        image: thirdGif,\n        answers: [\n            {\n                id: '1',\n                text: 'Смотрю только презентации от технологических гигантов. Про Мету слышали?',\n                type: AnswerType.CPlus,\n            },\n            {\n                id: '2',\n                text: 'Остина Эванса – обо всем, от ПК до смартфонов и тем, что между',\n                type: AnswerType.Python,\n            },\n            {\n                id: '3',\n                text: 'Роботы Boston Dynamics – моя любимая компания на вечер',\n                type: AnswerType.CSharp,\n            },\n            {\n                id: '4',\n                text: 'Смотрю анпакинги новых продуктов',\n                type: AnswerType.Java,\n            },\n        ],\n    },\n    {\n        id: '4',\n        text: ()=> <Title><RedText>Как</RedText> бы ты описал(-а){'\\n'}свой {'<'}<BlueText>стиль одежды?</BlueText>{'>'}</Title>,\n        image: forthGif,\n        answers: [\n            {\n                id: '1',\n                text: 'Кроссовки, джинсы, черная водолазка. Ну вы поняли',\n                type: AnswerType.CPlus,\n            },\n            {\n                id: '2',\n                text: 'Толстовка с карманом для ноута и поддерживающая шею подушка для работы',\n                type: AnswerType.Python,\n            },\n            {\n                id: '3',\n                text: 'Джинсы и футболка с “Eat. Code. Sleep. Repeat”',\n                type: AnswerType.CSharp,\n            },\n            {\n                id: '4',\n                text: 'Ношу толстовки с кейс-чемпионатов, летом – футболки с кейс-чемпионатов',\n                type: AnswerType.Java,\n            },\n        ],\n    },\n    {\n        id: '5',\n        text: () => <Title>\n            <RedText>Какую подпись</RedText>\n            {'\\n'}ты бы поставил(-а) в {'{\\n'}<BlueText>электронную почту?</BlueText>{'\\n}'}\n        </Title>,\n        image: fifthGif,\n        answers: [\n            {\n                id: '1',\n                text: 'Нет проблем, есть только решения!',\n                type: AnswerType.CSharp,\n            },\n            {\n                id: '2',\n                text: 'Долгой жизни и процветания',\n                type: AnswerType.Python,\n            },\n            {\n                id: '3',\n                text: 'С наилучшими пожеланиями',\n                type: AnswerType.Java,\n            },\n            {\n                id: '4',\n                text: 'Спасибо, что прочитали мое письмо. Вот изображение котенка',\n                type: AnswerType.CPlus,\n            },\n        ],\n    },\n    {\n        id: '6',\n        text: () => <Title><BlueText>Чем</BlueText> займемся {'{\\n'}<RedText>после работы?</RedText>{'\\n}'}</Title>,\n        image: sixthGif,\n        answers: [\n            {\n                id: '1',\n                text: 'Я же уже говорил. Ком-пи-ля-тор',\n                type: AnswerType.CPlus,\n            },\n            {\n                id: '2',\n                text: 'Пойду к друзьям обсуждать идеи для стартапов',\n                type: AnswerType.Python,\n            },\n            {\n                id: '3',\n                text: 'Буду проходить курсы по machine learning',\n                type: AnswerType.CSharp,\n            },\n            {\n                id: '4',\n                text: 'Домой, там вместо ИИ мама убралась',\n                type: AnswerType.Java,\n            },\n        ],\n    },\n    {\n        id: '7',\n        text: () => <Title>\n            И <RedText>последний</RedText> вопрос:{'\\n'}какие твои любимые {'{\\n'}<BlueText>рабочие задачи?</BlueText>{'\\n}'}\n        </Title>,\n        image: seventhGif,\n        answers: [\n            {\n                id: '1',\n                text: 'Брифинги команды перед новыми проектами',\n                type: AnswerType.CPlus,\n            },\n            {\n                id: '2',\n                text: 'Что угодно. Могу данные проанализировать, могу машину обучить или игрушку написать',\n                type: AnswerType.Python,\n            },\n            {\n                id: '3',\n                text: 'Собирать сайты. Это я люблю!',\n                type: AnswerType.CSharp,\n            },\n            {\n                id: '4',\n                text: 'Приложения, желательно на Android',\n                type: AnswerType.Java,\n            },\n        ],\n    },\n];","import React from \"react\";\n\nexport const ProgressContext = React.createContext(null);\n\nexport const ProgressProvider = ProgressContext.Provider;\nexport const ProgressConsumer = ProgressContext.Consumer;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: relative;\n    height: 24.5vh;\n    z-index: 2;\n\n    @media screen and (min-width: 640px){\n        max-height: 190px;\n    }    \n    \n    @media screen and (max-height: 640px) and (orientation: landscape){\n      min-height: 170px;\n    }\n    \n    @media screen and (min-width: 640px){\n      max-width: 550px;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n        grid-row: 1/1;\n        grid-column: 2/2;\n        height: auto;\n        max-height: 363px;\n        max-width: 45vw;\n    }\n    \n    @media screen and (min-width: 1100px){\n        grid-row: 1/1;\n        grid-column: 2/2;\n        height: 100%;\n        max-height: 363px;\n    }\n`;\n\nconst ImageWrapperStyled = styled.div`\n    overflow: hidden;\n    border-radius: 25px;\n    height: 100%;\n`;\n\nconst Image = styled.img`\n    object-fit: cover;\n    width: 100%;\n    \n    @media screen and (min-width: 1100px){\n        height: 100%;\n    }\n    \n    @media screen and (max-width: 300px){\n        height: 100%;\n    }\n`;\n\nconst ButtonWrapper = styled.div`\n    position: absolute;\n    left: 0;\n    bottom: -1px;\n`;\n\nexport const ImageWrapper = (props) => {\n    const { image, children, ...restProps } = props;\n    return (\n        <Wrapper {...restProps}>\n            <ImageWrapperStyled>\n                <Image src={image} alt={''} />\n            </ImageWrapperStyled>\n            <ButtonWrapper>{children}</ButtonWrapper>\n        </Wrapper>\n    )\n}","import React from 'react';\n\nexport const LeftArrow = (props) => {\n    return (\n        <svg {...props} viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g clipPath=\"url(#clip0_151_513)\">\n                <path d=\"M1.34477 7.93324L12.72 1.6944L12.1034 0.226868L-1.52588e-05 6.94995V12.3975L12.1034 19.2269L12.72 17.7919L1.34477 11.3611V7.93324Z\" fill=\"white\"/>\n                <path d=\"M2.76553 8.85612V10.582H21L21 8.85612H2.76553Z\" fill=\"white\"/>\n            </g>\n            <defs>\n                <clipPath id=\"clip0_151_513\">\n                    <rect width=\"21\" height=\"19\" fill=\"white\" transform=\"matrix(-1 0 0 1 21 0.226868)\"/>\n                </clipPath>\n            </defs>\n        </svg>\n\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { LeftArrow } from '../svg/LeftArrow';\n\nconst BtnStyled = styled.button`\n    outline: none;\n    border: none;\n    background: #FF0000;\n    padding: 10px 15px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    font-size: 18px;\n    border-radius: 4px;\n    color: white;\n    cursor: pointer;\n    @media screen and (min-width: 1100px){\n      height: 48px;\n      padding: 15px 20px;\n    }\n`;\n\nconst LeftArrowStyled = styled(LeftArrow)`\n    width: 21px;\n    height: 19px;\n`;\n\nexport const Button = (props) => {\n    const {isShort, children, ...restProps} = props;\n    return (\n        <BtnStyled {...restProps}>\n            {isShort ? <LeftArrowStyled />\n                : children}\n        </BtnStyled>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { lineGif } from '../../constants/images';\n\nconst ImgStyled = styled.div`\n    width: calc(100% + 50px);\n    margin-left: -25px;\n    height: 13px;\n    background: url(${lineGif}) repeat-x;\n    @media screen and (min-width: 640px){\n      width: calc(100% + 21.6vw);\n      margin-left: -10.8vw;\n      height: 17px;\n    }\n    @media screen and (min-width: 900px) and (orientation: landscape){\n      grid-column: 1/3;\n      height: 26px;\n      grid-row: 1/1;\n      width: calc(100vw + 12.3vw);\n      margin-left: -6.9vw;\n    }\n`;\n\nexport const TopLine = (props) => {\n    return <ImgStyled {...props}/>\n}","import styled from 'styled-components';\n\nexport const FlexWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;","import React, { useContext, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { questions } from '../questions.config';\nimport { ProgressContext } from '../contexts/ProgressContext';\nimport { ImageWrapper } from './common/ImageWrapper';\nimport { Button } from './common/Button';\nimport { TopLine } from './common/TopLine';\nimport { Text } from './common/Text';\nimport { FlexWrapper } from './common/FlexWrapper';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-grow: 1;\n    padding: 0 19px 20px 25px;  \n    flex-direction: column;\n    height: 100%;\n    \n    @media screen and (min-height: 700px){\n        padding-bottom: 7vh;\n    }\n    \n    @media screen and (min-width: 640px){\n      padding: 0 10.8vw 7.2vh;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      display: grid;\n      padding: 0 5.4vw 12.1vh 6.9vw;\n      grid-template-columns: 41vw auto;\n      grid-template-rows: 1fr;\n      grid-auto-flow: column;\n      grid-gap: 2.7vw;\n    } \n`;\n\nconst ContentWrapper = styled.div`\n    padding: 15px 0;\n    \n    @media screen and (min-height: 700px){\n        padding-top: 5vh;\n    }\n    \n    @media screen and (min-width: 640px){\n      padding: 7.3vh 0 0;\n      max-width: 550px;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      max-width: none;\n      padding: 7.8vh 0 0;\n      grid-column: 1/2;\n      grid-row: 1/1;\n      display: flex;\n      flex-direction: column;\n    }\n    \n    @media screen and (min-width: 1100px){\n      padding: 12.8vh 0 0;\n    }\n`;\n\nconst AnswersBoxStyled = styled.div`\n    margin-top: 15px;\n    \n    @media screen and (min-width: 640px){\n      margin-top: 3.4vh;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      margin-top: auto;\n    }\n`;\n\nconst AnswerWrapper = styled.div`\n    background: ${ ({isSelected}) => isSelected ? '#FF0000' : '#062743'};\n    padding: 8px 10px;\n    cursor: pointer;\n    width: 100%;\n    border-radius: 4px;\n    \n    &:hover {\n            background: ${ ({isSelected}) => isSelected ? '#FF0000' : 'rgba(255, 0, 0, 0.7)'};\n    }\n    & + & {\n      margin-top: 5px;\n    }\n    \n    @media screen and (min-width: 640px){\n        padding: 10px 15px;\n        & + & {\n          margin-top: 10px;\n        }\n    }\n    \n    @media screen and (min-width: 1100px){\n      padding: 12px 18px;\n      \n      & + & {\n        margin-top: 15px;\n      }\n    }\n`;\n\nconst  NumberWrapper = styled(FlexWrapper)`\n    background: #000000;\n    color: white;\n    margin-left: -10px;\n    padding:  0 9px 0 22px;\n    height: 40px;\n    border-radius: 4px;\n    \n    @media screen and (min-width: 1100px){\n      height: 48px;\n      padding-right: 13px;\n    }\n`;\n\nconst ImageWrapperStyled = styled(ImageWrapper)`\n    margin-top: auto;\n`;\n\nconst ButtonStyled = styled(Button)`\n    z-index: 4;\n`;\n\nexport const QuestionWrapper = props => {\n    const { question } = props;\n    const { answers, setAnswer, setPrev, setNext } = useContext(ProgressContext);\n\n    const questionAnswers = question.answers;\n\n    const handleAnswerChange = useCallback((answerId) => {\n        setAnswer(question.id, answerId);\n        setTimeout(setNext, 1000);\n    }, [question, setAnswer, setNext]);\n\n    const renderAnswerWrapper = (answer) => {\n        return (\n            <AnswerWrapper\n                key={answer.id}\n                isSelected={answers[question.id] && answers[question.id] === answer.id}\n                onClick={() => handleAnswerChange(answer.id)}\n            >\n                <Text>{answer.text}</Text>\n            </AnswerWrapper>\n        )\n    }\n\n    return (\n        <Wrapper>\n            <TopLine />\n            <ContentWrapper>\n                {question.text()}\n                <AnswersBoxStyled>\n                    {questionAnswers.map(answer => (\n                        renderAnswerWrapper(answer)\n                    ))}\n                </AnswersBoxStyled>\n            </ContentWrapper>\n            <ImageWrapperStyled image={question.image}>\n                <FlexWrapper>\n                    <ButtonStyled onClick={setPrev} isShort={true}/>\n                    <NumberWrapper>\n                        <Text>{question.id}/{questions.length}</Text>\n                    </NumberWrapper>\n                </FlexWrapper>\n            </ImageWrapperStyled>\n        </Wrapper>\n    );\n};","import { questions } from \"../questions.config\";\n\nexport const getQuestionById = (id) => {\n    return questions.find(question => question.id === id);\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { BlueText, SmallText } from './Text';\n\nconst ShareTextStyled = styled(SmallText)`\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      max-width: 400px;\n    }\n  \n    @media screen and (min-width: 1100px){\n        max-width: 520px;\n    }\n`;\n\n\nexport const ShareText = (props) =>{\n    const {children, ...lastProps} = props;\n    return (\n        <ShareTextStyled {...lastProps}>\n            {children}\n        </ShareTextStyled>\n    )\n}","export const SEVERSTAL_TAG = '#Северстальhelloworld';","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport {ProgressContext} from \"../../contexts/ProgressContext\";\nimport { BlueText, RedText, Text, Title } from '../common/Text';\nimport { Logo } from '../svg/Logo';\nimport { TopLine } from '../common/TopLine';\nimport { ImageWrapper } from '../common/ImageWrapper';\nimport { introGif } from \"../../constants/images\";\nimport { AnswerType } from '../../answerTypes.config';\nimport { Button } from '../common/Button';\nimport { LeftArrow } from '../svg/LeftArrow';\nimport { FlexWrapper } from '../common/FlexWrapper';\nimport { ShareText } from '../common/ShareText';\nimport { SEVERSTAL_TAG } from '../../constants/hashtag';\n\nconst Wrapper = styled.div`\n    padding: 1.2vh 25px;\n    height: 100%;\n    \n    @media screen and (max-width: 300px){\n        padding: 1.2vh 10px;\n    }\n    \n    @media screen and (min-width: 640px){\n      padding: 3.3vh 10.8vw 7.2vh;\n    }\n    \n    @media screen and (min-width: 640px) and (max-height: 850px){\n      padding: 2vh 10.8vw 1.2vh;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      display: grid;\n      padding: 1.5vh 5.4vw 7.1vh 6.9vw;\n      grid-template-columns: 41vw auto;\n      grid-template-rows: 11.5vh 1fr;\n      grid-auto-flow: column;\n      grid-row-gap: 1vh;\n      grid-column-gap: 6.3vw;\n    }\n    \n    @media screen and (min-width: 1100px){\n      grid-template-rows: 21.5vh 1fr;\n      grid-row-gap: 1.5vh;\n    }\n`;\n\nconst LogoWrapper = styled.div`\n    @media screen and (min-width: 900px) and (orientation: landscape){\n      grid-row: 1/1;\n      grid-column: 1/1;\n    }\n`;\n\nconst LogoStyled = styled(Logo)`\n    width: 146px;\n    height: 62px;\n    margin-left: -13px;\n    \n    @media screen and (min-width: 640px){\n      width: 180px;\n      height: 80px;\n      margin-bottom: 1.6vh;\n    }\n    \n    @media screen and (max-height: 600px){\n      width: 105px;\n      height: 45px;\n    }\n    \n    @media screen and (min-width: 1100px){\n      width: 293px;\n      margin-bottom: 0;\n      height: 125px;\n      margin-left: -1.6vw;\n    } \n    \n    @media screen and (max-height: 630px) and (min-width: 1100px){\n        width: 211px;\n        height: 90px;\n    }\n`;\n\nconst ImageWrapperStyled = styled(ImageWrapper)`\n    @media screen and (min-width: 900px) and (orientation: landscape){\n        grid-row: 2/2;\n        max-height: 33vh;\n    }\n`;\n\nconst TextWrapper = styled.div`\n    margin: 20px 0;\n    \n    @media screen  and (min-width: 640px){\n      margin: 5.9vh 0;\n      max-width: 410px;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      max-width: none;\n      grid-row: 2/2;\n      grid-column: 1/2;\n      margin: auto 0 0;\n    } \n`;\n\nconst TitleStyled = styled(Title)`\n    @media screen and (min-width: 1100px){\n        font-size: 46px;\n    }\n    \n    @media screen and (min-width: 1100px) and (max-height: 550px){\n        font-size: 32px;\n    }\n`;\n\nconst TextStyled = styled(Text)`\n    @media screen and (min-width: 1100px) and (max-height: 550px){\n        font-size: 18px;\n    }\n`;\n\nconst AddInfoWrapper = styled.div`\n    @media screen  and (min-width: 640px){\n        max-width: 410px;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n        min-width: 100%;\n        grid-row: 2/2;\n        grid-column: 2/2;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n    }\n`;\n\nconst LanguageWrapper = styled.div`\n    padding: 11px 12px;\n    color: #D2DEE7;\n    background: #072339;\n    border-top-right-radius: 4px;\n    margin: 20px 4px 5px 0;\n    font-family: 'Inter', sans-serif;\n    \n    @media screen and (max-height: 600px){\n            padding: 8px 7px;\n            font-size: 14px;\n            margin: 10px 4px 5px 0;\n    }\n`;\n\nconst ArrowIcon = styled(LeftArrow)`\n    transform: rotate(180deg);\n    margin-left: 13px;\n    width: 21px;\n    height: 19px;\n`\n\nexport const Intro = () => {\n    const { setNext } = useContext(ProgressContext);\n\n    return <Wrapper>\n        <LogoWrapper>\n            <LogoStyled />\n            <TopLine />\n        </LogoWrapper>\n        <TextWrapper>\n            <TitleStyled>\n                Какой ты <BlueText>язык</BlueText> {'{\\n'}<BlueText>программирования?</BlueText>{'\\n}'}\n            </TitleStyled>\n            <TextStyled>\n                {'\\n'}Идеальный мир невозможно описать с помощью языков программирования?{'\\n'}Неправда — <BlueText>{'<'}</BlueText>сегодня они могут все<BlueText>{'>'}</BlueText>.{'\\n\\n'}И ты тоже, Нео, ведь <RedText>каждый из нас</RedText> — своего рода язык программирования...\n            </TextStyled>\n        </TextWrapper>\n        <AddInfoWrapper>\n            <ImageWrapperStyled image={introGif} >\n                <FlexWrapper>\n                    <Button onClick={setNext} isShort={false}>Играть</Button>\n                    <ArrowIcon />\n                </FlexWrapper>\n            </ImageWrapperStyled>\n            <FlexWrapper>\n                {Object.values(AnswerType).map(type => (\n                    <LanguageWrapper key={type}>{type}</LanguageWrapper>\n                ))}\n            </FlexWrapper>\n            <ShareText>\n                Репостни результат\n                с хештегом <BlueText>{SEVERSTAL_TAG} </BlueText>\n                себе на стену VK и поборись\n                за наушники Sony WH-1000XM4!\n            </ShareText>\n        </AddInfoWrapper>\n\n\n    </Wrapper>\n}","import React from 'react';\n\nexport  const Logo = (props) => {\n    return (\n        <svg {...props} viewBox=\"0 0 146 62\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M23.4474 46.2314C18.5951 46.2314 15.9615 42.7377 15.9615 38.3667C15.9615 33.9477 19.058 30.3105 24.1497 30.3105C25.5065 30.3105 26.6717 30.4859 27.6932 31.0124V33.8679C26.3365 33.0703 25.2671 32.9108 24.2615 32.9108C20.8138 32.9108 19.5369 35.4473 19.5369 38.1274C19.5369 41.1106 21.149 43.4716 23.9582 43.4716C25.2032 43.4716 26.1928 43.1206 27.3899 42.4825L28.2519 44.7957C26.4482 45.9443 24.9159 46.2314 23.4474 46.2314ZM77.9241 46.2314C74.3328 46.2314 72.4972 43.5992 72.4972 40.4565C72.4972 36.9469 74.9233 34.6177 78.1795 34.6177C79.616 34.6177 80.3662 34.9049 80.9727 35.2558V37.7764C80.1747 37.2021 79.5362 36.9947 78.6424 36.9947C76.8068 36.9947 75.6256 38.3507 75.6256 40.297C75.6256 42.0358 76.5354 43.7428 78.5945 43.7428C79.1691 43.7428 79.9352 43.4875 80.7493 43.0728L81.5154 45.1626C80.6056 45.7847 79.0574 46.2314 77.9241 46.2314ZM87.9 37.3616V46.0081H84.7077V37.3616H81.6112V34.8411H91.3956L90.7093 37.3616H87.9ZM103.303 36.1492C103.303 40.0417 103.143 42.0677 102.441 43.0089C102.09 43.4716 101.531 43.7906 100.957 43.8704L101.834 46.2314C102.569 46.2155 103.686 45.8964 104.468 45.1307C105.49 44.1416 105.825 42.8813 105.968 41.5413C106.096 40.4086 106.192 39.0845 106.192 37.92V37.3616H108.698V46.0081H111.89V34.8411H103.319V36.1492H103.303ZM67.182 34.6177C65.937 34.6177 64.9953 35.2239 64.1653 35.8621L63.8141 34.8411H61.1326V51.448L64.3249 50.4749V45.7688C64.8995 46.0719 65.6497 46.2314 66.4637 46.2314C69.7678 46.2314 71.747 43.4237 71.747 40.1055C71.763 36.564 69.7518 34.6177 67.182 34.6177ZM65.6976 43.9183C65.123 43.9183 64.676 43.7268 64.3249 43.4716V38.1912C64.708 37.6169 65.6976 36.9309 66.5435 36.9309C67.8205 36.9309 68.5866 37.7445 68.5866 40.0577C68.5707 41.9561 67.8683 43.9183 65.6976 43.9183ZM95.9766 34.6177C94.4762 34.6177 93.0077 34.857 91.4914 35.8461L92.4491 37.7764C93.1993 37.3457 94.1729 37.0266 95.2902 37.0266C96.3916 37.0266 97.3812 37.5212 97.3812 38.6857V38.8771L95.4498 38.9569C92.6247 39.0526 90.7252 40.2651 90.7252 42.6261C90.7252 44.8435 92.3214 46.2474 94.4443 46.2474C95.8808 46.2474 96.8704 45.705 97.5887 45.0509L98.0835 46.024H100.573V38.7655C100.589 35.8142 98.9454 34.6177 95.9766 34.6177ZM97.3972 43.2323C97.0939 43.4716 96.4554 43.7428 95.6095 43.7428C94.5241 43.7428 93.9175 43.2004 93.9175 42.3549C93.9175 41.5094 94.572 41.0467 95.9446 40.9989L97.3972 40.951V43.2323ZM118.067 38.4624H116.423V34.3465L113.231 35.208V46.0081H117.317C120.286 46.0081 123.047 45.2104 123.047 42.1315C123.047 39.5312 120.813 38.4624 118.067 38.4624ZM117.541 43.8066H116.439V40.6798H117.509C118.642 40.6798 119.871 40.8553 119.871 42.1794C119.871 43.4875 118.802 43.8066 117.541 43.8066ZM46.8311 39.93V39.8343C47.8686 39.611 48.7305 38.925 48.7305 37.4733C48.7305 35.7344 47.262 35.0963 45.8255 34.9049C45.3786 34.8411 44.4209 34.8411 43.8782 34.8411H39.3291V46.0081H43.1599C43.5749 46.0081 44.2134 46.0081 44.7082 45.9921C46.7193 45.8964 49.2093 45.1785 49.2093 42.5782C49.1934 40.9829 48.3314 40.1853 46.8311 39.93ZM42.5853 36.9628H43.8941C45.203 36.9628 45.6818 37.3616 45.6818 38.0476C45.6818 38.9091 44.8838 39.1803 43.5589 39.1803H42.5853V36.9628V36.9628ZM43.8143 43.8864H42.5055V41.1425H43.6547C45.187 41.1425 46.0011 41.4934 46.0011 42.4985C46.017 43.5513 44.9316 43.8864 43.8143 43.8864ZM38.2916 40.3289C38.2916 36.883 36.1688 34.6177 33.1201 34.6177C29.7842 34.6177 27.9007 37.3138 27.9007 40.4565C27.9007 43.3918 29.5447 46.2314 33.5192 46.2314C34.8599 46.2314 36.3763 45.9283 37.9245 44.9552L37.2222 42.9451C35.9613 43.5513 35.1472 43.7428 34.0618 43.7428C32.5774 43.7428 31.1569 42.8175 31.093 41.3179H38.3076V40.3289H38.2916ZM31.0132 39.1005C31.0132 38.0795 31.7474 36.9309 33.0243 36.9309C34.3811 36.9309 34.9717 38.0316 35.0355 39.1005H31.0132ZM60.2387 40.3289C60.2387 36.883 58.1159 34.6177 55.0672 34.6177C51.7312 34.6177 49.8478 37.3138 49.8478 40.4565C49.8478 43.3918 51.4918 46.2314 55.4662 46.2314C56.823 46.2314 58.3234 45.9283 59.8716 44.9552L59.1693 42.9451C57.9084 43.5513 57.0943 43.7428 56.0089 43.7428C54.5245 43.7428 53.1199 42.8175 53.0401 41.3179H60.2547V40.3289H60.2387ZM52.9603 39.1005C52.9603 38.0795 53.6945 36.9309 54.9714 36.9309C56.3282 36.9309 56.9187 38.0316 56.9826 39.1005H52.9603Z\" fill=\"white\"/>\n            <path d=\"M128.73 26.9444C128.554 27.072 128.363 27.1677 128.171 27.2316C127.533 27.423 126.766 27.2475 126.064 26.9604C125.569 26.753 125.043 26.4818 124.5 26.1468C124.787 25.4448 125.058 24.6472 125.282 23.7698C125.633 22.3978 125.809 21.2014 125.841 20.1485C125.857 19.4944 125.825 18.9042 125.761 18.3458C125.665 17.596 125.426 16.8303 124.947 16.3836C124.787 16.24 124.612 16.1284 124.388 16.0326C125.378 15.921 126.272 15.921 127.054 15.9688C127.884 16.0326 128.714 16.24 129.193 16.7186C129.687 17.1972 129.895 18.0267 129.975 18.8563C130.054 19.638 130.054 20.5313 129.975 21.5204C129.879 22.5095 129.687 23.6103 129.368 24.8227C129.177 25.5884 128.953 26.3222 128.73 26.9444ZM116.679 26.3382C116.663 26.1149 116.663 25.9075 116.711 25.716C116.854 25.0779 117.397 24.4877 118.003 24.025C118.434 23.69 118.929 23.371 119.488 23.0679C119.951 23.6581 120.509 24.2962 121.148 24.9343C122.153 25.9234 123.111 26.6732 124.021 27.2316C124.58 27.5825 125.106 27.8537 125.617 28.0611C126.319 28.3483 127.086 28.5237 127.724 28.3323C127.916 28.2685 128.123 28.1568 128.299 28.0292C127.9 28.9545 127.453 29.7202 127.022 30.3743C126.543 31.0443 125.952 31.6664 125.298 31.8579C124.643 32.0493 123.813 31.81 123.063 31.475C122.345 31.156 121.579 30.7093 120.749 30.135C119.935 29.5607 119.089 28.8428 118.195 27.9654C117.62 27.407 117.11 26.8487 116.679 26.3382ZM123.223 16.2081C123.43 16.3038 123.606 16.4155 123.75 16.5431C124.244 16.9898 124.468 17.7555 124.564 18.5053C124.628 19.0318 124.659 19.622 124.643 20.2601C123.893 20.3559 123.079 20.5313 122.201 20.7706C120.845 21.1535 119.711 21.6002 118.77 22.0947C118.195 22.3978 117.684 22.7328 117.253 23.0679C116.663 23.5305 116.104 24.1048 115.96 24.7589C115.913 24.9662 115.913 25.1896 115.928 25.4129C115.338 24.5993 114.891 23.8336 114.54 23.1317C114.189 22.3819 113.949 21.5523 114.125 20.8983C114.3 20.2282 114.907 19.638 115.577 19.1434C116.216 18.6808 116.982 18.2341 117.892 17.8194C118.802 17.4046 119.839 17.0217 121.052 16.6867C121.818 16.4953 122.553 16.3357 123.223 16.2081Z\" fill=\"white\"/>\n        </svg>\n    )\n}","import { useContext } from 'react';\nimport { ProgressContext } from '../contexts/ProgressContext';\nimport { getAnswerById } from '../utils/getAnswerById';\nimport { AnswerType, answerTypes } from '../answerTypes.config';\n\nconst DEFAULT_RESULT = AnswerType.CPlus;\n\nexport const useResult = () => {\n    const { answers } = useContext(ProgressContext);\n\n    const resultPoints = Object.keys(answers).reduce((res, questionId) => {\n        const answerId = answers[questionId];\n        if (!answerId) return res;\n\n        const answer = getAnswerById(questionId, answerId);\n        const { type } = answer;\n        return { ...res, [type]: (res[type] || 0) + 1 };\n    }, {});\n\n    const maxPoints = Math.max(...Object.keys(resultPoints).map(key => resultPoints[key]));\n    const resultType = Object.keys(resultPoints).find(key => resultPoints[key] === maxPoints);\n\n    return answerTypes[resultType || DEFAULT_RESULT];\n};","import {getQuestionById} from \"./getQuestionById\";\n\nexport const getAnswerById = (questionId, answerId) => {\n    return getQuestionById(questionId).answers.find(answer => answer.id === answerId);\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { useResult } from '../../hocs/useResult';\nimport { BlueText, SmallText, Text } from '../common/Text';\nimport { TopLine } from '../common/TopLine';\nimport { FlexWrapper } from '../common/FlexWrapper';\nimport { VKIcon } from '../svg/VKIcon';\nimport { ImageWrapper } from '../common/ImageWrapper';\nimport { getShareParams } from '../../utils/getShareParams';\nimport { ShareText } from '../common/ShareText';\nimport { SEVERSTAL_TAG } from '../../constants/hashtag';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-grow: 1;\n    padding: 0 19px 20px 25px;  \n    flex-direction: column;\n    height: 100%;\n    \n    @media screen and (min-width: 640px){\n      padding: 0 10.8vw 7.2vh;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      display: grid;\n      padding: 0 5.4vw 16.1vh 6.9vw;\n      grid-template-columns: 41vw auto;\n      grid-template-rows: minmax(120px, 20.77vh) 1fr;\n      grid-auto-flow: column;\n      grid-column-gap: 2.7vw;\n    }\n    \n    @media screen and (min-width: 1100px){\n      grid-template-rows: minmax(150px, 23.77vh) 1fr;\n      grid-column-gap: 2.7vw;\n    }\n    \n    @media screen and (min-width: 1100px) and (max-height: 785px){\n      padding-bottom: 5vh;\n    }\n`;\n\nconst TypeWrapper = styled(FlexWrapper)`\n    height: 37px;\n    width: fit-content;\n    padding: 0 10px;\n    justify-content: center;\n    background: #FF0000;\n    border-radius: 4px;\n    font-size: 18px;\n    margin-right: 12px;\n    \n    @media screen and (max-width: 330px){\n        height: 30px;\n        padding: 0 7px;\n        font-size: 16px;\n    }\n    \n    @media screen and (min-width: 640px){\n        padding: 0 15px;\n        font-size: 24px;\n        height: 48px;\n    }\n    \n    @media screen and (min-width: 1100px){\n        margin-right: 39px;\n    }\n`;\n\nconst ResultTitleWrapper = styled(FlexWrapper)`\n    margin: 20px -10px 20px 0;\n    \n    @media screen and (max-height: 650px){\n         margin: 15px -10px 15px 0;\n    } \n    \n    @media screen and (min-width: 640px){\n         margin: 6.34vh -10px 6.34vh 0;\n         max-width: 500px;\n    }\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      max-width: none;\n      grid-row: 1/1;\n      grid-column: 1/2;\n      margin: 7.6vh -10px 7.6vh 0;\n    }\n`;\n\nconst ResultImageWrapper = styled.div`\n    position: relative;\n    margin-bottom: 4.5vh;\n    \n    @media screen and (min-width: 640px){\n        width: 410px;\n        margin-bottom: 5.1vh;\n    } \n    @media screen and (min-width: 900px) and (orientation: landscape){\n        width: 100%;\n        max-width: 560px;\n        margin-bottom: 0;\n        grid-column: 1/1;\n        grid-row: 2/2;\n        margin-top: auto;\n    }\n    \n    @media screen and (min-width: 1100px){\n        width: 100%;\n        max-width: 560px;\n        margin-bottom: 0;\n        grid-column: 1/1;\n        grid-row: 2/2;\n        margin-top: auto;\n        height: 100%;\n    }\n`;\n\nconst ImageWrapperStyled = styled(ImageWrapper)`\n    @media screen and (min-width: 1100px){\n        height: calc(100% - 60px);\n        max-height: none;\n    }\n`\nconst AddTitleWrapper = styled.div`\n  background: #062743;\n  z-index: 0;\n  margin-top: -34px;\n  padding: 51px 17px 17px;\n  border-radius: 4px;\n  \n  @media screen and (max-width: 330px){\n        padding: 47px 10px 13px;\n  } \n  \n  @media screen and (min-width: 640px){\n        width: 497px;\n        border-radius: 16px;\n        margin-top: -44px;\n        padding: 57px 23px 26px;\n  }\n  \n  @media screen and (min-width: 900px) and (orientation: landscape){\n        width: 100%;\n  }\n`;\n\n\n\nconst DescriptionWrapper = styled.div`\n  max-width: 340px;\n  margin-bottom: 10px;\n  \n  @media screen and (max-width: 320px){\n    & ${Text}{\n      font-size: 11px;\n    }\n  }\n  \n  @media screen and (min-width: 900px) and (orientation: landscape){\n      max-width: 400px;\n      grid-row: 2/2;\n      grid-column: 2/2;\n  }\n  \n  @media screen and (min-width: 1100px){\n      max-width: 455px;\n  }\n`;\n\nconst ShareBtn = styled(FlexWrapper)`\n    justify-content: center;\n    border-radius: 50%;\n    height: 50px;\n    width: 50px;\n    min-width: 50px;\n    background: #FF0000;\n    cursor: pointer;\n    \n    @media screen and (max-width: 320px){\n      height: 40px;\n      width: 40px;\n      min-width: 40px;\n    } \n    \n    @media screen and (min-width: 640px){\n      height: 54px;\n      width: 54px;\n      min-width: 54px;\n    }\n`;\n\nconst VKIconStyled = styled(VKIcon)`\n    width: 32px;\n    height: 32px;\n    \n    @media screen and (max-width: 320px){\n      height: 22px;\n      width: 22px;\n    }\n    \n    @media screen and (min-width: 640px){\n      height: 37px;\n      width: 37px;\n    }\n`;\n\nconst ShareWrapper = styled(FlexWrapper)`\n    margin-top: auto;\n    \n    @media screen and (min-width: 900px) and (orientation: landscape){\n      grid-row: 2/2;\n      grid-column: 2/2;\n    }\n`;\n\nconst ShareTextStyled = styled(ShareText)`\n    margin-left: 19px;\n    max-width: 205px;\n    \n    @media screen and (min-width: 640px){\n      max-width: 433px;\n    }\n    \n`;\n\nexport const Final = () => {\n    const result = useResult();\n\n    const onShare = () => {\n        window.open(getShareParams(result), '_blank');\n    }\n\n    return (\n        <Wrapper>\n            <TopLine />\n            <ResultTitleWrapper>\n                <TypeWrapper>\n                    {result.type}\n                </TypeWrapper>\n                <SmallText>{result.title}</SmallText>\n            </ResultTitleWrapper>\n            <ResultImageWrapper>\n                <ImageWrapperStyled image={result.image}/>\n                <AddTitleWrapper>\n                    <SmallText>{result.addTitle}</SmallText>\n                </AddTitleWrapper>\n            </ResultImageWrapper>\n            <DescriptionWrapper>\n                {result.description()}\n            </DescriptionWrapper>\n            <ShareWrapper>\n                <ShareBtn onClick={onShare}>\n                    <VKIconStyled/>\n                </ShareBtn>\n                <ShareTextStyled>\n                    Репостни результат\n                    с хештегом <BlueText>{SEVERSTAL_TAG} </BlueText>\n                    себе на стену VK и поборись\n                    за наушники Sony WH-1000XM4!\n                    {'\\n'}Победителей выберем рандомайзером 23.12.21.\n                </ShareTextStyled>\n            </ShareWrapper>\n        </Wrapper>\n    )\n}","import React from 'react';\n\nexport const VKIcon = (props) => {\n    return (\n        <svg {...props} viewBox=\"0 0 24 24\" fill={'white'}>\n            <path d=\"M13.162 18.994c.609 0 .858-.406.851-.915-.031-1.917.714-2.949 2.059-1.604 1.488 1.488 1.796 2.519 3.603 2.519h3.2c.808 0 1.126-.26 1.126-.668 0-.863-1.421-2.386-2.625-3.504-1.686-1.565-1.765-1.602-.313-3.486 1.801-2.339 4.157-5.336 2.073-5.336h-3.981c-.772 0-.828.435-1.103 1.083-.995 2.347-2.886 5.387-3.604 4.922-.751-.485-.407-2.406-.35-5.261.015-.754.011-1.271-1.141-1.539-.629-.145-1.241-.205-1.809-.205-2.273 0-3.841.953-2.95 1.119 1.571.293 1.42 3.692 1.054 5.16-.638 2.556-3.036-2.024-4.035-4.305-.241-.548-.315-.974-1.175-.974h-3.255c-.492 0-.787.16-.787.516 0 .602 2.96 6.72 5.786 9.77 2.756 2.975 5.48 2.708 7.376 2.708z\"/>\n        </svg>\n    )\n}","import { Question6 } from './components/screens/questions/Question6';\nimport { Question7 } from './components/screens/questions/Question7';\nimport { Question5 } from './components/screens/questions/Question5';\nimport { Question4 } from './components/screens/questions/Question4';\nimport { Question3 } from './components/screens/questions/Question3';\nimport { Question2 } from './components/screens/questions/Question2';\nimport { Question1 } from './components/screens/questions/Question1';\nimport { Intro } from './components/screens/Intro';\nimport { Final } from './components/screens/Final';\nimport {\n  CPlusGif,\n  CSharpGif,\n  fifthGif,\n  firstQGif,\n  forthGif,\n  JavaGif, PythonGif,\n  secondQGif,\n  seventhGif,\n  sixthGif,\n  thirdGif\n} from './constants/images';\n\nexport const ScreenType = {\n  Intro: 'intro',\n  Question: 'question',\n  Final: 'final',\n};\n\nexport const screens = [\n  {\n    name: 'intro',\n    component: Intro,\n    type: ScreenType.Intro,\n    preloadImages: [firstQGif],\n  },\n  {\n    name: 'question-1',\n    component: Question1,\n    type: ScreenType.Question,\n    preloadImages: [secondQGif],\n    image: [firstQGif]\n  },\n  {\n    name: 'question-2',\n    component: Question2,\n    type: ScreenType.Question,\n    preloadImages: [thirdGif],\n    image: [secondQGif]\n  },\n  {\n    name: 'question-3',\n    component: Question3,\n    type: ScreenType.Question,\n    preloadImages: [forthGif],\n    image: [thirdGif]\n  },\n  {\n    name: 'question-4',\n    component: Question4,\n    type: ScreenType.Question,\n    preloadImages: [fifthGif],\n    image: [forthGif],\n  },\n  {\n    name: 'question-5',\n    component: Question5,\n    type: ScreenType.Question,\n    preloadImages: [sixthGif],\n    image: [fifthGif],\n  },\n  {\n    name: 'question-6',\n    component: Question6,\n    type: ScreenType.Question,\n    preloadImages: [seventhGif],\n    image: [sixthGif],\n  },\n  {\n    name: 'question-7',\n    component: Question7,\n    type: ScreenType.Question,\n    preloadImages: [JavaGif, CSharpGif, CPlusGif, PythonGif],\n    image: [seventhGif],\n  },\n  {\n    name: 'final',\n    component: Final,\n    type: ScreenType.Final,\n  },\n];","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question1 = (props) => {\n    return (\n        <QuestionWrapper\n            question={getQuestionById('1')}\n            {...props}\n        />\n    );\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question2 = (props) => {\n\n    return (\n        <QuestionWrapper\n            question={getQuestionById('2')}\n            {...props}\n        />\n    );\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question3 = (props) => {\n\n    return (\n        <QuestionWrapper\n            question={getQuestionById('3')}\n            {...props}\n        />\n    );\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question4 = (props) => {\n\n    return (\n        <QuestionWrapper\n            question={getQuestionById('4')}\n            {...props}\n        />\n    );\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question5 = (props) => {\n    return (\n        <QuestionWrapper\n            question={getQuestionById('5')}\n            {...props}\n        />\n    );\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question6 = (props) => {\n    return (\n        <QuestionWrapper\n            question={getQuestionById('6')}\n            {...props}\n        />\n    );\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question7 = (props) => {\n    return (\n        <QuestionWrapper\n            question={getQuestionById('7')}\n            {...props}\n        />\n    );\n};","import { resolve } from \"url\";\nimport { SEVERSTAL_TAG } from '../constants/hashtag';\n\nexport const getShareParams = (result) => {\n    const url = [window.location.protocol, '//', window.location.host, window.location.pathname].join('');\n\n    const shareText = SEVERSTAL_TAG;\n    const shareImage = resolve(url, result.shareImage);\n\n    const queryParams = new URLSearchParams();\n    queryParams.append(\"url\", url);\n    queryParams.append(\"title\", shareText);\n    queryParams.append(\"image\", shareImage);\n    queryParams.append(\"comment\", shareText);\n\n    return `http://vk.com/share.php?${queryParams.toString()}`;\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { DownMark } from '../svg/DownMark';\nimport { Text } from './Text';\n\nconst FlexContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Wrapper = styled(FlexContainer)`\n    height: 40px;\n    justify-content: flex-start;\n    width: 100%;\n    background: #01111D;\n    border-bottom: 1px solid #122D42;\n    color: #5F7E97;\n    \n    @media screen and (max-height: 600px){\n        height: 32px;\n    }\n    @media screen and (min-width: 1100px){\n       height: 62px;\n    } \n`;\n\nconst TextStyled = styled(Text)`\n    font-family: 'Inter', sans-serif;\n`\n\nconst Tab = styled(FlexContainer)`\n    border-right: 1px solid #272B3B;\n    padding: 0 16px;\n    height: 100%;\n    font-size: 14px;\n    \n    &:last-child{\n        border-width: 2px;\n    }\n    \n    @media screen and (max-width: 340px){\n        padding: 0 8px;\n    }\n`;\n\nconst ActiveTab = styled(Tab)`\n    color: #CFDBE4;\n    padding-right: 30px;\n    background-color: #062743;\n    \n    @media screen and (max-width: 340px){\n        padding-right: 15px;\n    }\n`;\n\nconst ButtonsBlock = styled(Tab)`\n    padding: 14px;\n    \n    @media screen and (max-width: 300px){\n        padding: 8px;\n    }\n`;\n\nconst Button = styled.div`\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background: ${({ color }) => color};\n    margin-left: 8px;\n    \n    &:first-child{\n        margin-left: 0;\n    }\n    \n    @media screen and (max-width: 300px){\n         width: 10px;\n        height: 10px;\n    }\n`;\n\nconst DropDown = styled(FlexContainer)`\n      margin: 0 12px 0 auto;\n      @media screen and (max-width: 300px){\n        margin-right: 2px;\n      }\n`;\n\nconst DropIcon = styled(DownMark)`\n      width: 10px;\n      height: 7px;\n      margin-left: 5px;\n`\nexport const AppBar = () => {\n    return (\n        <Wrapper>\n            <ButtonsBlock>\n                <Button color={'#FF4A4A'}/>\n                <Button color={'#FFB83D'}/>\n                <Button color={'#00C543'}/>\n            </ButtonsBlock>\n            <ActiveTab>\n                <TextStyled>about.css</TextStyled>\n            </ActiveTab>\n            <Tab>\n                <TextStyled>bio.md</TextStyled>\n            </Tab>\n            <DropDown>\n                <TextStyled>Theme</TextStyled>\n                <DropIcon />\n            </DropDown>\n        </Wrapper>\n    )\n}","import React from 'react';\n\nexport const DownMark = (props) => {\n    return(\n        <svg {...props} viewBox=\"0 0 10 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1 1.5L5 5.5L9 1.5\" stroke=\"#5F7E97\" strokeWidth=\"1.5\"/>\n        </svg>\n\n    )\n}","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { questions } from '../questions.config';\nimport { screens } from '../screens.config';\nimport { preloadImage } from '../utils/preloadImage';\nimport { ProgressProvider } from '../contexts/ProgressContext';\nimport { AppBar } from './common/AppBar';\n\nconst ScreenWrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: hidden;\n  color: white;\n  height: ${({ height }) => height};\n  white-space: pre-wrap;\n`;\n\nconst DEFAULT_ANSWERS = questions.reduce((res, question) => ({ ...res, [question.id]: null }), {});\n\nexport function ScreenWrapper() {\n    /////////////////// for development ////////////////////////////////////\n    const urlParams = new URLSearchParams(window.location.search);\n    const screenParam = urlParams.get('screen');\n    ////////////////////////////////////////////////////////////////////////\n    const [height, setHeight] = useState('100vh');\n\n    useEffect(() => {\n        function handleResize() {\n            const viewportHeight = document.documentElement.clientHeight;\n            setHeight(viewportHeight + 'px');\n        }\n        handleResize();\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    const [currentScreenIndex, setCurrentScreenIndex] = useState(+screenParam || 0);\n    const [screenDelta, setScreenDelta] = useState(0);\n    const [answers, setAnswers] = useState(DEFAULT_ANSWERS);\n\n    const setPrev = () => {\n        const canSet = currentScreenIndex > 0;\n        if (canSet) {\n            setCurrentScreenIndex(currentScreenIndex - 1);\n            setScreenDelta(screenDelta - 1);\n        }\n    };\n\n    const setNext = () => {\n        const canSet = currentScreenIndex < screens.length - 1;\n        if (canSet) {\n            setCurrentScreenIndex(currentScreenIndex + 1);\n            setScreenDelta(screenDelta === 0 ? screenDelta : screenDelta + 1);\n        }\n    };\n\n    const setAnswer = (questionId, answerId) => {\n        setAnswers(answers => ({ ...answers, [questionId]: answerId }));\n    };\n\n    const { component, preloadImages, ...screen } = screens[currentScreenIndex] || {};\n    const Component = component || (() => null);\n\n    useEffect(() => {\n        const clears = preloadImages && preloadImages.map(img => preloadImage(img));\n        return () => clears && clears.forEach(clear => clear());\n    }, [preloadImages]);\n\n    const progressProviderValue = {\n        screen,\n        answers,\n        screenDelta,\n        setAnswer,\n        setNext,\n        setPrev,\n    };\n\n    return (\n        <ScreenWrapperStyled height={height}>\n            <ProgressProvider value={progressProviderValue}>\n                <AppBar />\n                <Component />\n            </ProgressProvider>\n        </ScreenWrapperStyled>\n    );\n}\n","export const preloadImage = (src) => {\n  const image = document.createElement('img');\n  image.style.position = 'absolute';\n  image.style.top = '-9999px';\n  image.style.left = '-9999px';\n  image.src = src;\n\n  document.body.appendChild(image);\n\n  return () => document.body.removeChild(image);\n};","import React from 'react';\nimport { ScreenWrapper } from './components/ScreenWrapper';\n\nfunction App() {\n  return (\n      <ScreenWrapper />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}